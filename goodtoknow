so some of the things that you might do well to remember: 

tmux: 	
	C-a is the prefix 
	C-a " split view horizontally 
	C-a % split view vertically 
	C-a [ is scroll 
	
	C-h/j/k/l is to move around 
	note that this works for vim splits too 

	C-t gives you a new tab 
	S-left ; S-right to move around 
	C-S- left/right to swap
	S up/down to move between remote and local tmux

vim : 
	:colo 		the colorscheme 
	:ls 		list buffers
	:b# 		go to buffer 
	:scriptname	list plugins  

	when at a new computer system, run in vim 
		:PluginInstall 

	to make sure everything is in place
	nerdcommenter
		<leader> is \ 
		cc to comment a line out 
		cs to comment in a sexy manner? (use with visual mode to cmmnt out blocks)  
		c-space to toggle comment 

to use the display: 
	echo $DISPLAY (to check) 
	export DISPLAY=:0 
	also start xming (win -- xlaunch) 
	
git: 
	git config credential.helper store 		to store your credentials 
	git config --global credential.helper 'cache --timeout 10800'
							store your credentials for 3 hours 

	how to start a new repo in an existing file: 
		make the repo on github or whatever link you use, keep the link 
		go to your directory 
		git init 
		git remote set-url origin https://link.to/your/repo.git

	
	the main part of git: how to use it: 
	create new branch: 	git branch branch_name 
		checkout new branch: 		git checkout branch_name 
	 	now work as usual:	 	git add && git commit 
		fetch from remote: 		git fetch 
		one commit to rule them all:	git rebase -i origin/master 
	now checkout and pull from master: 	git checkout master && git pull 
	merge them together: 			git merge branch_name && git push
	delete your branch (optional):		git branch -d branch_name	
	
	some new stuffs: 
		to compare changes, see git diff. SEE, use google 
		to ignore all changes on a file and exclude a file from git pull: 
		
		git update-index --assume-unchaged /path/to/file
